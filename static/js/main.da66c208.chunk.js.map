{"version":3,"sources":["PricePlot.js","App.js","reportWebVitals.js","index.js"],"names":["PricePlot","useState","apartmentData","setApartmentData","useEffect","console","log","axios","get","then","res","apartments","strata","x","y","windsor","azure","data","sort","a","b","date","localeCompare","forEach","entry","name","push","min_price","trace1","mode","trace2","trace3","trace4","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAIO,SAASA,IACZ,MAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACAC,qBAAU,WACNC,QAAQC,IAAI,eACZC,IAAMC,IAAI,mFACTC,MAAK,SAACC,GACH,IAAMC,EAAa,CACfC,OAAQ,CAACC,EAAG,GAAIC,EAAG,IACnBC,QAAS,CAACF,EAAG,GAAIC,EAAG,IACpB,cAAe,CAACD,EAAG,GAAIC,EAAG,IAC1BE,MAAO,CAACH,EAAG,GAAIC,EAAG,KAGtBJ,EAAIO,KAAKC,MAAK,SAACC,EAAEC,GAAH,OAASD,EAAEE,KAAKC,cAAcF,EAAEC,SAC9CX,EAAIO,KAAKM,SAAQ,SAACC,GACdb,EAAWa,EAAMC,MAAMZ,EAAEa,KAAKF,EAAMH,MACpCV,EAAWa,EAAMC,MAAMX,EAAEY,KAAKF,EAAMG,cAExCtB,QAAQC,IAAIK,GACZR,EAAiBQ,QAEtB,IAGH,IAAMiB,EAAM,2BACL1B,EAAca,SADT,IAERc,KAAM,QACNJ,KAAM,YAEJK,EAAM,2BACL5B,EAAcc,OADT,IAERa,KAAM,QACNJ,KAAM,UAEJM,EAAM,2BACL7B,EAAcU,QADT,IAERiB,KAAM,QACNJ,KAAM,WAEJO,EAAM,2BACL9B,EAAc,gBADT,IAER2B,KAAM,QACNJ,KAAM,gBAEV,OAAO,cAAC,IAAD,CAAMR,KAAM,CAACW,EAAQE,EAAQC,EAAQC,KC1CjCC,MAJf,WACE,OAAO,cAACjC,EAAD,KCSMkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.da66c208.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport Plot from 'react-plotly.js';\n\nexport function PricePlot() {\n    const [apartmentData, setApartmentData] = useState({})\n    useEffect(() => {\n        console.log('hello world')\n        axios.get(\"https://36ej55h6pc.execute-api.us-east-1.amazonaws.com/Prod/get-apartment-data/\")\n        .then((res) => {\n            const apartments = {\n                strata: {x: [], y: []},\n                windsor: {x: [], y: []}, \n                \"340-fremont\": {x: [], y: []},\n                azure: {x: [], y: []}\n\n            }\n            res.data.sort((a,b) => a.date.localeCompare(b.date))\n            res.data.forEach((entry) => {\n                apartments[entry.name].x.push(entry.date)\n                apartments[entry.name].y.push(entry.min_price)\n            })\n            console.log(apartments)\n            setApartmentData(apartments)\n        })\n    }, [])\n\n\n    const trace1 = {\n        ...apartmentData.windsor,\n        mode: \"lines\",\n        name: \"windsor\"\n    }\n    const trace2 = {\n        ...apartmentData.azure,\n        mode: \"lines\",\n        name: \"azure\"\n    }\n    const trace3 = {\n        ...apartmentData.strata,\n        mode: \"lines\",\n        name: \"strata\"\n    }\n    const trace4 = {\n        ...apartmentData[\"340-fremont\"],\n        mode: \"lines\",\n        name: \"340-fremont\"\n    }\n    return <Plot data={[trace1, trace2, trace3, trace4]}/>\n}","import { PricePlot } from \"./PricePlot\";\n\nfunction App() {\n  return <PricePlot/>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}